#include <ximage.h>

static uint8_t extract_quadrilateral_16x16_data[] =
{
    0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0xFF, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 
    0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0xFF, 0x1B, 0x34, 0x5A, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x51, 0x89, 0xC9, 0xFF, 
    0x51, 0x8E, 0xCD, 0xFF, 0x51, 0x96, 0xD5, 0xFF, 0x52, 0x9E, 0xDC, 0xFF, 0x53, 0xA6, 0xE4, 0xFF, 0x53, 0xAE, 0xEC, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0xFF, 0x1B, 0x34, 0x5A, 0xFF, 
    0x1B, 0x34, 0x5A, 0xFF, 0x1B, 0x34, 0x5A, 0xFF, 0x1B, 0x34, 0x5A, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 
    0x50, 0x8A, 0xC9, 0xFF, 0x51, 0x8D, 0xCD, 0xFF, 0x51, 0x96, 0xD4, 0xFF, 0x51, 0x9E, 0xDC, 0xFF, 0x53, 0xA6, 0xE4, 0xFF, 
    0x53, 0xAE, 0xEB, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x21, 0x45, 0x7B, 0xFF, 0x1B, 0x34, 0x5A, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x50, 0x89, 0xC9, 0xFF, 0x50, 0x8D, 0xCD, 0xFF, 0x51, 0x95, 0xD5, 0xFF, 0x52, 0x9E, 0xDC, 0xFF, 
    0x52, 0xA6, 0xE3, 0xFF, 0x53, 0xAF, 0xEC, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0xFF, 
    0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x1B, 0x34, 0x5A, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x51, 0x89, 0xC9, 0xFF, 0x50, 0x89, 0xC9, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 
    0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x21, 0x45, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x51, 0x89, 0xC9, 0xFF, 0x51, 0x89, 0xC9, 0xFF, 0x51, 0x8F, 0xCF, 0xFF, 
    0x51, 0x94, 0xD3, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x50, 0x89, 0xC9, 0xFF, 0x50, 0x89, 0xC9, 0xFF, 0x51, 0x8F, 0xCE, 0xFF, 
    0x51, 0x95, 0xD4, 0xFF, 0x52, 0x9B, 0xD9, 0xFF, 0x52, 0xA1, 0xDF, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x51, 0x8E, 0xCE, 0xFF, 
    0x51, 0x95, 0xD4, 0xFF, 0x52, 0x9A, 0xD9, 0xFF, 0x52, 0xA1, 0xDE, 0xFF, 0x52, 0xA7, 0xE4, 0xFF, 0x53, 0xAD, 0xE9, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x1B, 0x34, 0x5A, 0x00, 0x21, 0x45, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x87, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x52, 0x9A, 0xD9, 0xFF, 0x52, 0xA1, 0xDE, 0xFF, 0x53, 0xA6, 0xE4, 0xFF, 0x53, 0xAC, 0xE9, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0x00, 
    0x1B, 0x34, 0x5A, 0x00, 0x1B, 0x34, 0x5A, 0x00, 0x1B, 0x34, 0x5A, 0x00, 0x21, 0x45, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 0x52, 0xA6, 0xE4, 0xFF, 0x52, 0xAC, 0xE9, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x34, 0x5A, 0x00, 0x21, 0x45, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x87, 0xFF, 0x86, 0xBC, 0xF9, 0xFF, 
    0x86, 0xBC, 0xF9, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x45, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x20, 0x4A, 0x87, 0xFF, 0x20, 0x4A, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
};

static const ximage image_extract_quadrilateral_16x16 =
{
    &extract_quadrilateral_16x16_data[0],
    16, 16,
    64,
    XPixelFormatRGBA32
};
